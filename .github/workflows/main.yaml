name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  buildAndTestForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - GameBaseSeedUnity
        gameBasePath:
          - GameBaseUnity
        unityVersion:
          - 2021.3.9f1
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android player.
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ matrix.projectPath }}
          fetch-depth: 0
          lfs: true
      - uses: actions/checkout@v2
        with:
          repository: tanis2000/GameBaseUnity
          ref: master
          path: ${{ matrix.gameBasePath }}
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
#      - uses: game-ci/unity-test-runner@v2
#        id: testRunner
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#        with:
#          projectPath: ${{ matrix.projectPath }}
#          unityVersion: ${{ matrix.unityVersion }}
#          githubToken: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/upload-artifact@v2
#        if: always()
#        with:
#          name: Test results (all modes)
#          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  buildForWindowsBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - GameBaseSeedUnity
        gameBasePath:
          - GameBaseUnity
        unityVersion:
          - 2021.3.9f1
        targetPlatform:
          - StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- tvOS # Build an AppleTV player.
          #- WSAPlayer # Build a UWP App.

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ matrix.projectPath }}
          fetch-depth: 0
          lfs: true
      - uses: actions/checkout@v2
        with:
          repository: tanis2000/GameBaseUnity
          ref: master
          path: ${{ matrix.gameBasePath }}
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  buildForMacOSBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - GameBaseSeedUnity
        gameBasePath:
          - GameBaseUnity
        unityVersion:
          - 2021.3.9f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone.

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ matrix.projectPath }}
          fetch-depth: 0
          lfs: true
      - uses: actions/checkout@v2
        with:
          repository: tanis2000/GameBaseUnity
          ref: master
          path: ${{ matrix.gameBasePath }}
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
#      - name: Fix File Permissions and Code-Sign
#        env:
#          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
#          APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
#          APPLE_DISTRIBUTION_CERTIFICATE: ${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE }}
#          APPLE_DISTRIBUTION_PASSWORD: ${{ secrets.APPLE_DISTRIBUTION_PASSWORD }}
#          MAC_INSTALLER_CERTIFICATE: ${{ secrets.MAC_INSTALLER_CERTIFICATE }}
#          MAC_INSTALLER_PASSWORD: ${{ secrets.MAC_INSTALLER_PASSWORD }}
#          MAC_APP_BUNDLE_PATHS: Contents/PlugIns/StandaloneFileBrowser.bundle
#          MAC_BUILD_PATH: ${{ format('{0}/build/StandaloneOSX', github.workspace) }}
#          PROJECT_NAME: GameBaseSeedUnity
#        run: |
#          bundle install
#          bundle exec fastlane mac fixversion
#          find $MAC_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
#          chmod +x fastlane/sign-mac-build.sh
#          ./fastlane/sign-mac-build.sh
          
      - name: Fix File Permissions
        run: |
          chmod +x ${{ github.workspace }}/build/StandaloneOSX/StandaloneOSX.app/Contents/MacOS/GameBaseSeedUnity
          xattr -d com.apple.quarantine ${{ github.workspace }}/build/StandaloneOSX/StandaloneOSX.app/Contents/MacOS/GameBaseSeedUnity
          
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build